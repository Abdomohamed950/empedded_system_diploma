/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */
#include <stdint.h>
#include <stm32f103x6.h>
#include <gpio_driver.h>
#include <stdlib.h>

int main(void)
{
	//enable clock in PORTA and PORTB
    RCC_GPIOA_CLK_EN();
    RCC_GPIOB_CLK_EN();

    GPIO_PinConfig_t pin_conf;
//    pin p1
    pin_conf.GPIO_MODE = GPIO_MODE_OUTPUT_PP ;
    pin_conf.GPIO_Output_Speed = GPIO_SPEED_10_MHZ ;
    pin_conf.GPIO_PinNumber = pin1 ;
    MCAL_GPIO_INIT(GPIOB, &pin_conf);

//    pin p13
    pin_conf->GPIO_MODE = GPIO_MODE_OUTPUT_PP ;
    pin_conf->GPIO_Output_Speed = GPIO_SPEED_10_MHZ ;
    pin_conf->GPIO_PinNumber = pin13 ;
    MCAL_GPIO_INIT(GPIOB, pin_conf);

//    pin a1
    pin_conf->GPIO_MODE = GPIO_MODE_INPUT_FLOTING ;
//    pin_conf.GPIO_Output_Speed = GPIO_SPEED_10_MHZ ;
    pin_conf->GPIO_PinNumber = pin1 ;
    MCAL_GPIO_INIT(GPIOA, pin_conf);

//    pin a13
    pin_conf->GPIO_MODE = GPIO_MODE_INPUT_FLOTING ;
//    pin_conf.GPIO_Output_Speed = GPIO_SPEED_10_MHZ ;
    pin_conf->GPIO_PinNumber = pin13 ;
    MCAL_GPIO_INIT(GPIOA, pin_conf);





    while(1){

    	if( MCAL_GPIO_READPIN(GPIOA, pin1)==0)
    	{
    		MCAL_GPIO_TOGGLEPIN(GPIOB, pin1);
    		while( MCAL_GPIO_READPIN(GPIOA, pin1)==0);
    	}
    	if( MCAL_GPIO_READPIN(GPIOA, pin13)==1)
    	    	{
    	    		MCAL_GPIO_TOGGLEPIN(GPIOB, pin13);
    	}
    	for(int i =0 ; i<512;i++);
    }
}
